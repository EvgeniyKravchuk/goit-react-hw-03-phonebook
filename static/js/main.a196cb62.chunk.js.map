{"version":3,"sources":["components/General.styled.jsx","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/contactsList/ContaxList.styled.jsx","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Title","h1","h2","Form","form","Label","label","props","filter","Input","input","Button","button","ContactForm","state","name","number","handleChange","bind","handleSubmit","evt","target","this","setState","value","contact","id","uuidv4","notUniqueName","contacts","some","item","notUniqueNumber","preventDefault","alert","addContact","clear","type","pattern","title","required","placeholder","onChange","onClick","Component","List","ul","Item","li","ContactsList","deleteContact","map","Filter","App","getLocalContacts","prevProps","prevState","parsedData","JSON","parse","localStorage","getItem","updateLocalContacts","setItem","stringify","contactForDelete","findIndex","currentTarget","newContacts","splice","toLowerCase","includes","components","length","notification","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a196cb62.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 1400px;\n  min-height: 100vh;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: grey;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nexport const Undertitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600px;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  text-align: center;\n\n  padding: 20px;\n\n  border-bottom: 5px solid black;\n`;\n\nexport const Label = styled.label`\n  font-size: 30px;\n  font-weight: 600;\n\n  display: flex;\n  justify-content: ${(props) => (props.filter ? \"center\" : \"space-between\")};\n  align-items: ${(props) => (props.filter ? \"center\" : \"baseline\")};\n\n  flex-direction: ${(props) => (props.filter ? \"column\" : \"row\")};\n\n  transition-duration: 500ms;\n\n  cursor: pointer;\n\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 300px;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  outline: none;\n\n  border: none;\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  padding-left: 10px;\n  margin-left: 20px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n    border: 2px solid orange;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 20px;\n  font-weight: 500;\n\n  width: 150px;\n  height: 30px;\n\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    background-color: orange;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Input, Label, Button, Form } from \"./ContactForm.styled\";\n\nexport default class ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      number: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(evt) {\n    const { name } = evt.target;\n\n    this.setState({ [name]: evt.target.value });\n  }\n\n  handleSubmit(evt) {\n    const { name, number } = this.state;\n    const id = uuidv4();\n    const contact = { id, name, number };\n    const notUniqueName = this.props.contacts.some(\n      (item) => item.name === this.state.name\n    );\n    const notUniqueNumber = this.props.contacts.some(\n      (item) => item.number === this.state.number\n    );\n\n    evt.preventDefault();\n\n    if (notUniqueName) {\n      return alert(this.state.name + \" уже добавлен(а) в список контактов\");\n    } else if (notUniqueNumber) {\n      return alert(\"Уже добавлен контакт с номером: \" + this.state.number);\n    } else if (this.state.name === \"\" || this.state.number === \"\") {\n      return alert(\"Пожалуйста, введите Имя и номер.\");\n    } else {\n      this.props.addContact(contact);\n      this.clear();\n    }\n  }\n\n  clear() {\n    this.setState({ name: \"\", number: \"\" });\n  }\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form>\n        <Label>\n          Имя:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            placeholder=\"Введите имя\"\n            onChange={this.handleChange}\n            value={name}\n          />\n        </Label>\n        <Label>\n          Номер:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"Введите номер телефона\"\n            onChange={this.handleChange}\n            value={number}\n          />\n        </Label>\n        <Button type=\"submit\" onClick={this.handleSubmit}>\n          Подтвердить\n        </Button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n\n  width: 1000px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  margin: 0px;\n  margin-top: 20px;\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  font-size: 26px;\n  font-weight: 600;\n\n  width: 400px;\n  height: 50px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border: 1px solid black;\n\n  background-color: #4b4b4b;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: 1px solid black;\n  border-radius: 50%;\n\n  padding: 5px;\n\n  background-color: #4b4b4b;\n\n  cursor: pointer;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    border: 1px solid orange;\n    transform: rotate(360deg) scale(1.15);\n\n    svg {\n      fill: orange;\n    }\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n\n    transition-duration: 500ms;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { List, Item, Button } from \"./ContaxList.styled\";\n\nexport default function ContactsList({ contacts, deleteContact }) {\n  return (\n    <List>\n      {contacts().map((contact) => {\n        return (\n          <Item key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button id={contact.id} onClick={deleteContact}>\n              <FaRegTrashAlt />\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { Input, Label } from \"../contactForm/ContactForm.styled\";\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <Label filter=\"true\">\n      Введите имя для поиска в списке контактов\n      <Input name=\"filter\" onChange={onChange} value={filter} />\n    </Label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport \"./App.module.css\";\nimport { Wrapper, Title } from \"./components/General.styled\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactsList from \"./components/contactsList/ContactsList\";\nimport Filter from \"./components/filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    if (localStorage.components) {\n      this.getLocalContacts();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts.length !== this.state.contacts.length) {\n      this.updateLocalContacts();\n    }\n  }\n\n  getLocalContacts = (prevProps, prevState) => {\n    const parsedData = JSON.parse(localStorage.getItem(\"contacts\"));\n    this.setState({ contacts: parsedData });\n  };\n\n  updateLocalContacts = () => {\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  };\n\n  addContact = (contact) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  deleteContact = (evt) => {\n    const contactForDelete = this.state.contacts.findIndex(\n      (contact) => contact.id === evt.currentTarget.id\n    );\n    const newContacts = this.state.contacts;\n\n    newContacts.splice(contactForDelete, 1);\n\n    this.setState({\n      contacts: newContacts,\n    });\n\n    this.updateLocalContacts();\n  };\n\n  handleChange = (evt) => {\n    const { name } = evt.target;\n\n    this.setState({ [name]: evt.target.value });\n  };\n\n  filter = () => {\n    const { contacts } = this.state;\n\n    const filteredContacts = contacts.filter((contact) => {\n      return contact.name\n        .toLowerCase()\n        .includes(this.state.filter.toLowerCase());\n    });\n\n    return filteredContacts;\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const notification = <h2>Нет сохраненных контактов `=(</h2>;\n\n    return (\n      <Wrapper>\n        <Title>Телефонная книга:</Title>\n        <ContactForm addContact={this.addContact} contacts={contacts} />\n        <Filter filter={filter} onChange={this.handleChange} />\n        {this.state.contacts.length < 1 ? (\n          notification\n        ) : (\n          <ContactsList\n            contacts={this.filter}\n            deleteContact={this.deleteContact}\n          />\n        )}\n      </Wrapper>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}